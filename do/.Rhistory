term != "") %>%
mutate(term = str_replace(term, "!", ""))
term_per_user %>%
count(sentiment, term) %>%
group_by(sentiment) %>%
top_n(n = 15, wt = n) %>%
mutate(n = ifelse(sentiment == "負向查詢", -n, n)) %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "前15高被客戶搜尋的正負向關鍵字", x = "", y = "共被幾位不同的客戶搜尋過", fill = "") +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5),
text = element_text(family = "凝書體 2.1 Regular"))
ggsave("被最多客戶搜尋的關鍵字.png")
term_per_user %>%
count(sentiment, term) %>%
group_by(sentiment) %>%
top_n(n = 15, wt = n) %>%
mutate(n = ifelse(sentiment == "負向查詢", -n, n)) %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free") +
coord_flip() +
labs(title = "前15高被客戶搜尋的正負向關鍵字", x = "", y = "共被幾位不同的客戶搜尋過", fill = "") +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5),
text = element_text(family = "凝書體 2.1 Regular"))
# 次數代表該客戶在所有搜尋紀錄中，正負向查詢的關鍵字總數
term_per_user %>%
count(document, sentiment, wt = count) %>%
spread(sentiment, n, fill = 0)
pos_term_per_user <- term_per_user %>%
filter(sentiment == "正向查詢")
term_tf_idf <- pos_term_per_user %>%
bind_tf_idf(term, document, count)
# 以「每週」計算頻率
# percent: 被幾位不同客戶搜尋／該週有幾個不同客戶
pos_key_freq <-  df_pos_keyword %>%
mutate(keyword = str_to_lower(keyword),
keyword = str_replace_all(keyword, "\\s", ""),
keyword = str_replace_all(keyword, "\\[", ""),
keyword = str_replace_all(keyword, "\\]", "")) %>%
mutate(week = week(date)) %>%
group_by(week) %>%
mutate(week_total = n_distinct(user_id)) %>%
group_by(keyword, week) %>%
summarise(count = n_distinct(user_id), percent = count / first(week_total)) %>%
ungroup()
search_by_most_users <- pos_term_per_user %>%
group_by(term) %>%
summarise(n_user = n_distinct(document)) %>%
filter(term != "") %>%
top_n(n = 11, wt = n_user)
pos_key_freq %>%
filter(keyword %in% search_by_most_users$term) %>%
ggplot(aes(week, percent)) +
geom_point() +
geom_smooth() +
facet_wrap(~ keyword, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab(NULL) +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5),
text = element_text(family = "凝書體 2.1 Regular"))
ggsave("關鍵字隨時間變化.png",  width = 9, height = 6)
keyword_by_time <- df_pos_keyword %>%
filter(keyword != "", keyword != " ") %>%
mutate(keyword = str_to_lower(keyword),
keyword = str_trim(keyword),
week = week(date),
two_week = week %/% 2,
month = month(date),
time = two_week) %>%
group_by(keyword, time) %>%
mutate(user_count = n_distinct(user_id)) %>%
group_by(keyword) %>%
mutate(word_total = n_distinct(user_id)) %>%
group_by(time) %>%
mutate(time_total = n_distinct(user_id)) %>%
group_by(keyword, time) %>%
arrange(date) %>%
summarise(user_count = first(user_count),
time_total = first(time_total),
word_total = first(word_total),
date = first(date),
.groups = 'drop') %>%
arrange(desc(user_count)) %>%
filter(word_total >= 5)
nested_data <- keyword_by_time %>%
nest(data = -keyword)
nested_models <- nested_data %>%
mutate(models = map(data, ~ glm(cbind(user_count, time_total) ~ time, ., family = "binomial")))
slopes <- nested_models %>%
mutate(models = map(models, tidy)) %>%
unnest(cols = c(models)) %>%
filter(term == "time")
top_slopes <- slopes %>%
filter(p.value < 0.1)
slopes %>%
filter(p.value < 0.05)
keyword_by_time %>%
inner_join(top_slopes, by = "keyword") %>%
ggplot(aes(date, user_count/time_total, color = keyword)) +
geom_point(size = 1.5) +
# geom_smooth() +
geom_line(size = 1) +
geom_text(aes(label = user_count), vjust = -0.55) +
labs(y = NULL) +
scale_y_continuous(labels = scales::percent_format()) +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5),
text = element_text(family = "凝書體 2.1 Regular"))
ggsave("顯著變化的關鍵字.png", width = 9, height = 6)
# co-occurrence network
keyword_pairs <- pos_term_per_search %>%
pairwise_count(term, document, sort = TRUE, upper = FALSE)
set.seed(1234)
keyword_pairs %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2.5) +
geom_node_text(aes(label = name), repel = TRUE,
family = "凝書體 2.1 Regular", size = 4,
point.padding = unit(0.2, "lines")) +
theme_void() +
theme(panel.background = element_rect(fill = 'white', colour = 'white'))
ggsave("關鍵字共同出現網絡圖.png", width = 12, height = 8)
# correlation network
keyword_cors <- pos_term_per_search %>%
group_by(term) %>%
filter(n() > 75) %>%
pairwise_cor(term, document, sort = TRUE, upper = FALSE)
set.seed(1234)
keyword_cors %>%
filter(correlation > .5, correlation < 0.99) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation, edge_width = correlation * 0.1),
edge_colour = "royalblue", show.legend = FALSE) +
geom_node_point(size = 2.5) +
geom_node_text(aes(label = name), repel = TRUE,
family = "凝書體 2.1 Regular", size = 3.5,
point.padding = unit(0.2, "lines")) +
theme_void() +
theme(panel.background = element_rect(fill = 'white', colour = 'white'))
ggsave("關鍵字相關係數網絡圖.png", width = 12, height = 8)
# 選定一個關鍵字，看不同時間點跟他最常一起出現的字
keyword_dtm <- pos_term_per_search%>%
cast_dtm(document, term, count)
tm::inspect(keyword_dtm)
ap_lda <- LDA(keyword_dtm, k = 40, control = list(seed = 1234))
ap_topics <- tidy(ap_lda, matrix = "beta")
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ap_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
axis.text.x = element_text(size = 6),
plot.title = element_text(size = 8),
text = element_text(family = "凝書體 2.1 Regular"))
term <- terms(ap_lda, 5)
apply(term, MARGIN = 2, paste, collapse = ", ") %>% print
term
apply(term, MARGIN = 2, paste, collapse = ", ") %>% print
rdm.topics <- topics(lda)
rdm.topics <- topics(ap_lda)
rdm.topics <- data.frame(date = as.IDate(ff$create_time),
topic = rdm.topics)
rdm.topics <- data.frame(date = as.IDate(df$create_time),
topic = rdm.topics)
rdm.topics <- data.frame(date = df$create_time,
topic = rdm.topics)
ggplot(rdm.topics, aes(date, fill = term[topic])) +
geom_density(position = "stack")
ggplot(rdm.topics, aes(date, fill = term[topic])) +
geom_density(position = "stack") +
theme(text = element_text(family = "凝書體 2.1 Regular"))
rdm.topics
rdm.topics
rdm.topics[1]
rdm.topics[2]
rdm.topics[3]
rdm.topics[1.:]
rdm.topics[1:]
rdm.topics[1,:]
rdm.topics
rdm.topics <- topics(ap_lda)
rdm.topics
keyword_dtm
keyword_dtm[567]
keyword_dtm[567]
inspect(keyword_dtm[567])
tm::inspect(keyword_dtm[567])
tm::inspect(keyword_dtm)
tm::inspect(keyword_dtm[189])
dtm$dimnames$Docs
keyword_dtm$dimnames$Docs
document <- data.frame(docs = keyword_dtm$dimnames$Docs, as.matrix(keyword_dtm), row.names = NULL)
head(document)
document %>%
filter(docs = 757)
document %>%
filter(docs == 757)
ap_lda <- LDA(keyword_dtm, k = 40, control = list(seed = 1234))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read_csv("/Users/ShengFu/Downloads/MOZE.csv")
glimpse(df)
df %>%
mutate(date = as.Date('日期'))
View(df)
View(df)
df %>%
mutate(date = as_date('日期'))
df %>%
mutate(date = as_date('日期'))
df %>%
mutate(date = as.Date('日期'))
df %>%
mutate(date = as.Date(日期))
df %>%
mutate(date = as_date(日期))
df %>%
mutate(date = as.Date(日期))
df <- df %>%
mutate(date = as.Date(日期),
year = year(date))
library(lubridate)
df <- df %>%
mutate(date = as_date(日期),
year = year(date))
df <- df %>%
mutate(date = as_date(日期),
year = year(date))
df
df %>%
fliter(類型=="支出")
df %>%
fliter(類型=="支出")
library(tidyverse)
df %>%
filter(類型=="支出")
df %>%
filter(類型=="支出") %>%
group_by(year) %>%
summarise(sum(金額))
df <- df %>%
mutate(date = as_date(日期),
year = year(date),
ym = floor_date(date, unit = "month"))
df
df %>%
filter(類型=="支出") %>%
group_by(ym) %>%
summarise(sum(金額))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(sum(金額))
summarise(total = abs(sum(金額))
summarise(total = abs(sum(金額))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = sum(金額))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額)))
ggplot(aes(ym, total, color = 類型)
geom_line()
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line()
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
options(dplyr.summarise.inform = FALSE)
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b %Y", breaks = unique(df$Date))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b %Y", breaks = unique(df$date))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$date))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%Y-%M", breaks = unique(df$ym))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%M", breaks = unique(df$ym))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym)) +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total)) +
geom_line(aes(color = 類型)) +
scale_x_date(date_labels="%b", breaks = unique(df$ym)) +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total)) +
geom_line(aes(color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym)) +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total)) +
# geom_line(aes(color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym)) +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total)) +
geom_line(aes(color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym)) +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額)))
df %>%
filter(類型!="轉帳") %>%
group_by(ym, 類型) %>%
summarise(total = abs(sum(金額))) %>%
ggplot(aes(ym, total, color = 類型)) +
geom_line() +
scale_x_date(date_labels="%b", breaks = unique(df$ym)) +
theme(text = element_text(family = "jf金萱3.0 三分糖"))
getwd() #偵測既有工作路徑
list.files() #列出 or dir()
dir() #同上
file.rename("20211215.r", "week_final.r") #替換檔案名稱（在括弧中打入 “ 原檔案名稱”, “新的檔案名稱” ）
dir() #同上
file.rename("day1.Rmd", "Day1.Rmd") #替換檔案名稱（在括弧中打入 “ 原檔案名稱”, “新的檔案名稱” ）
dir() #同上
file.rename("Day1.Rmd", "day1.Rmd") #替換檔案名稱（在括弧中打入 “ 原檔案名稱”, “新的檔案名稱” ）
say_hello <- function(x) {
hello_char <- sprintf("Hello %s!", x)
return(hello_char)
}
say_hello("World")
say_hello(" R ")
a <- c(1, 2, 3, 4)
class(a)
str(a)
a <- c(1, 2, 3, 4, "5")
class(a)
str(a)
class(a), class(b)
class(b)
a <- c(1, 2, 3, 4)
b <- c(a, "5")
class(a)
str(a)
class(b)
str(b)
getwd() #偵測既有工作路徑
setwd("/Users/ShengFu/Desktop/臺大/2022政治計量營IPM/Introduction to R") #變更工作路徑
list.files() #列出 or dir()
dir() #同上
file.rename("day1.Rmd", "Day1.Rmd") #替換檔案名稱（在括弧中打入 “ 原檔案名稱”, “新的檔案名稱” ）
file.rename("Day1.Rmd", "day1.Rmd") #替換檔案名稱（在括弧中打入 “ 原檔案名稱”, “新的檔案名稱” ）
# install.packages("tidyverse")
library(tidyverse)
install.packages("rmarkdown")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages(c("broom", "DBI", "dbplyr", "generics", "gt", "gtExtras", "latticeExtra", "nlme", "openssl", "processx", "ps", "raster", "rlang", "sp", "terra", "tinytex", "XML"))
install.packages(c("broom", "DBI", "dbplyr", "generics", "gt", "gtExtras", "latticeExtra", "nlme", "openssl", "processx", "ps", "raster", "rlang", "sp", "terra", "tinytex", "XML"))
install.packages(c("broom", "DBI", "dbplyr", "generics", "gt", "gtExtras", "latticeExtra", "nlme", "openssl", "processx", "ps", "raster", "rlang", "sp", "terra", "tinytex", "XML"))
install.packages(c("broom", "DBI", "dbplyr", "generics", "gt", "gtExtras", "latticeExtra", "nlme", "openssl", "processx", "ps", "raster", "rlang", "sp", "terra", "tinytex", "XML"))
library(purrr)
df_raw <- read_excel("綜合分析.xlsx")
df <- df_raw %>%
mutate(date = as_date(create_time),
wd = wday(date, label = TRUE),
month = month(create_time))
pwd
pwd()
library(tidyverse)
load("cgss2010.Rdata")
newdata
newdata[1, 10:]
newdata[1, 10:]
newdata[1:10,]
str(newdata)O
str(newdata)
glimpse(newdata)
str(newdata)
MODEL <- glm(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = newdata, family = "binomial")
summary(MODEL)
View(newdata)
View(MODEL)
View(MODEL)
install.packages("MatchIt")
library(MatchIt)
m.out = matchit(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = newdata, method = "nearest", ratio = 1)
mydata <- newdata %>%
filter(!is.na(CCPmember))
MODEL <- glm(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = mydata, family = "binomial")
summary(MODEL)
summary(m.out)
m.out = matchit(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = newdata, method = "nearest", ratio = 1)
m.out = matchit(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = mydata, method = "nearest", ratio = 1)
mydata <- newdata %>%
drop_na()
MODEL <- glm(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = mydata, family = "binomial")
summary(MODEL)
m.out = matchit(CCPmember ~ male + age + race + edu + height + weight + english + mandarin + faEdu + faCCPmember, data = mydata, method = "nearest", ratio = 1)
summary(m.out)
plot(m.out, type = "jitter")
plot(m.out, type = "hist")
View(m.out)
dta_m <- match.data(mod_match)
dta_m <- match.data(m.out)
dim(dta_m)
dta_m
dta_m %>% View()
with(dta_m, t.test(hincome ~ CCPmemeber))
with(dta_m, t.test(hincome ~ CCPmemeber))
dim(dta_m)
View(dta_m)
View(dta_m)
with(dta_m, t.test(hincome ~ CCPmember))
library(haven)
employee <- read_dta("臺大/課程/大三/高級社會統計 柯志哲/作業三/employee data.dta")
View(employee)
View(employee)
reticulate::repl_python()
